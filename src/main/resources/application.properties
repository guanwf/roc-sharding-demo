server.port=8088

#mybatis.config-location=classpath:mybatis-config.xml
spring.shardingsphere.props.sql.show=true
#
spring.shardingsphere.mode.type=memory
#  standalone
#  memory
spring.shardingsphere.datasource.names=ds1,ds2
#spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource

spring.main.allow-bean-definition-overriding=true

#
spring.shardingsphere.sharding.tables.course.key-generator.column=id
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

#ds1
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
  #com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://rm-cs.com:3306/imsdb1?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.username=sa
spring.shardingsphere.datasource.ds1.password=sa

#ds2
spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds2.url=jdbc:mysql://rm-8v.com:3306/imsdb2?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds2.username=sa
spring.shardingsphere.datasource.ds2.password=sa

#spring.shardingsphere.rules.sharding.sharding-algorithms.type=CLASS_BASED
#strategy
#spring.shardingsphere.sharding.tables.goods_demo.table-strategy.complex.sharding-columns=split_code,splitCode
#spring.shardingsphere.sharding.tables.goods_demo.table-strategy.complex.algorithm-class-name=com.shardingsphere.example.config.MyDBComplexKeysShardingAlgorithm
#
#spring.shardingsphere.sharding.default-database-strategy.complex.sharding-columns=split_code,splitCode
#spring.shardingsphere.sharding.default-database-strategy.complex.algorithm-class-name=com.shardingsphere.example.config.MyDBComplexKeysShardingAlgorithm

#spring.shardingsphere.rules.sharding.sharding-algorithms.type=COMPLEX_INLINE
#COMPLEX_INLINE

##spring.shardingsphere.rules.sharding.tables.goods_demo.actual-data-nodes=ds${1..2}.goods_demo
spring.shardingsphere.rules.sharding.tables.goods_demo.database-strategy.complex.sharding-columns=split_code
spring.shardingsphere.rules.sharding.tables.goods_demo.database-strategy.complex.sharding-algorithm-name=MyDBComplexKeysShardingAlgorithm
##  com.shardingsphere.example.config.MyDBComplexKeysShardingAlgorithm

#spring.shardingsphere.rules.sharding.default-database-strategy.complex.sharding-columns=split_code
#spring.shardingsphere.rules.sharding.default-database-strategy.strategy=COMPLEX
#spring.shardingsphere.rules.sharding.default-database-strategy.complex.algorithm_class_name=database_inline
#spring.shardingsphere.rules.sharding.default-database-strategy.complex.sharding-algorithm-name=MyDBComplexKeysShardingAlgorithm
#  com.shardingsphere.example.config.MyDBComplexKeysShardingAlgorithm
#spring.shardingsphere.class_based=complex

#spring.shardingsphere.rules.sharding.sharding-algorithms.MyDBComplexKeysShardingAlgorithm.type=MOD
#spring.shardingsphere.rules.sharding.sharding-algorithms.MyDBComplexKeysShardingAlgorithm.props.sharding-count=2
#spring.shardingsphere.rules.sharding.sharding-algorithms.MyDBComplexKeysShardingAlgorithm.props.algorithm-expression=ds{1..2}

#spring.shardingsphere.rules.sharding.default-database-strategy.complex.sharding-columns=split_code,splitCode
#spring.shardingsphere.rules.sharding.default-database-strategy.complex.sharding-algorithm-name=com.shardingsphere.example.config.MyDBComplexKeysShardingAlgorithm



#rules[0].tables.goods_demo.actualDataNodes=ds${1..2}.goods_demo
#rules[0].tables.goods_demo.databaseStrategy.standard.shardingColumn=id
#rules[0].tables.goods_demo.databaseStrategy.standard.shardingAlgorithmName=database_inline
#rules[0].tables.goods_demo.keyGenerateStrategy.column=id
#rules[0].tables.goods_demo.keyGenerateStrategy.keyGeneratorName=snowflake
#rules[0].shardingAlgorithms.database_inline.type=INLINE
#rules[0].shardingAlgorithms.database_inline.props.algorithm-expression=ds$->{id % 2}
#rules[0].keyGenerators.snowflake.type=SNOWFLAKE

#
#rules[0].tables.goods_demo.actualDataNodes=ds${1..2}.goods_demo
#rules[0].tables.goods_demo.databaseStrategy.complex.shardingColumn=id
#rules[0].tables.goods_demo.databaseStrategy.complex.shardingAlgorithmName=MyDBComplexKeysShardingAlgorithm
#rules[0].tables.goods_demo.databaseStrategy.complex.algorithmClassName=com.shardingsphere.example.config.MyDBComplexKeysShardingAlgorithm
#rules[0].shardingAlgorithms.MyDBComplexKeysShardingAlgorithm.type=COMPLEX
#rules[0].shardingAlgorithms.MyDBComplexKeysShardingAlgorithm.props.algorithm-expression=ds$->{id % 2}
#rules[0].keyGenerators.snowflake.type=SNOWFLAKE
#
